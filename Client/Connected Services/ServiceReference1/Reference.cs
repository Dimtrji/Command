//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTablePersonRow", Namespace="http://schemas.datacontract.org/2004/07/Command")]
    [System.SerializableAttribute()]
    public partial class DataTablePersonRow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_cardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_card {
            get {
                return this.Id_cardField;
            }
            set {
                if ((this.Id_cardField.Equals(value) != true)) {
                    this.Id_cardField = value;
                    this.RaisePropertyChanged("Id_card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICommands")]
    public interface ICommands {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/GetTable", ReplyAction="http://tempuri.org/ICommands/GetTableResponse")]
        Client.ServiceReference1.GetTableResponse GetTable(Client.ServiceReference1.GetTableRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/GetTable", ReplyAction="http://tempuri.org/ICommands/GetTableResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.GetTableResponse> GetTableAsync(Client.ServiceReference1.GetTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/SetTable", ReplyAction="http://tempuri.org/ICommands/SetTableResponse")]
        Client.ServiceReference1.SetTableResponse SetTable(Client.ServiceReference1.SetTableRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/SetTable", ReplyAction="http://tempuri.org/ICommands/SetTableResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.SetTableResponse> SetTableAsync(Client.ServiceReference1.SetTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/GetRandomRow", ReplyAction="http://tempuri.org/ICommands/GetRandomRowResponse")]
        System.Data.DataTable GetRandomRow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/GetRandomRow", ReplyAction="http://tempuri.org/ICommands/GetRandomRowResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRandomRowAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/Delete", ReplyAction="http://tempuri.org/ICommands/DeleteResponse")]
        void Delete(string dataSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommands/Delete", ReplyAction="http://tempuri.org/ICommands/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string dataSet);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTableRequest {
        
        public GetTableRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataTable GetTableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public GetTableResponse() {
        }
        
        public GetTableResponse(System.Data.DataTable GetTableResult, string message) {
            this.GetTableResult = GetTableResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Client.ServiceReference1.DataTablePersonRow tablePerson;
        
        public SetTableRequest() {
        }
        
        public SetTableRequest(Client.ServiceReference1.DataTablePersonRow tablePerson) {
            this.tablePerson = tablePerson;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SetTableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public SetTableResponse() {
        }
        
        public SetTableResponse(string SetTableResult, string message) {
            this.SetTableResult = SetTableResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandsChannel : Client.ServiceReference1.ICommands, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandsClient : System.ServiceModel.ClientBase<Client.ServiceReference1.ICommands>, Client.ServiceReference1.ICommands {
        
        public CommandsClient() {
        }
        
        public CommandsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.GetTableResponse Client.ServiceReference1.ICommands.GetTable(Client.ServiceReference1.GetTableRequest request) {
            return base.Channel.GetTable(request);
        }
        
        public System.Data.DataTable GetTable(out string message) {
            Client.ServiceReference1.GetTableRequest inValue = new Client.ServiceReference1.GetTableRequest();
            Client.ServiceReference1.GetTableResponse retVal = ((Client.ServiceReference1.ICommands)(this)).GetTable(inValue);
            message = retVal.message;
            return retVal.GetTableResult;
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.GetTableResponse> GetTableAsync(Client.ServiceReference1.GetTableRequest request) {
            return base.Channel.GetTableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.ServiceReference1.SetTableResponse Client.ServiceReference1.ICommands.SetTable(Client.ServiceReference1.SetTableRequest request) {
            return base.Channel.SetTable(request);
        }
        
        public string SetTable(Client.ServiceReference1.DataTablePersonRow tablePerson, out string message) {
            Client.ServiceReference1.SetTableRequest inValue = new Client.ServiceReference1.SetTableRequest();
            inValue.tablePerson = tablePerson;
            Client.ServiceReference1.SetTableResponse retVal = ((Client.ServiceReference1.ICommands)(this)).SetTable(inValue);
            message = retVal.message;
            return retVal.SetTableResult;
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.SetTableResponse> SetTableAsync(Client.ServiceReference1.SetTableRequest request) {
            return base.Channel.SetTableAsync(request);
        }
        
        public System.Data.DataTable GetRandomRow() {
            return base.Channel.GetRandomRow();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRandomRowAsync() {
            return base.Channel.GetRandomRowAsync();
        }
        
        public void Delete(string dataSet) {
            base.Channel.Delete(dataSet);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string dataSet) {
            return base.Channel.DeleteAsync(dataSet);
        }
    }
}
